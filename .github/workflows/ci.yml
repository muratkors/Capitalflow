
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: capitalflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: app/yarn.lock

      - name: Install dependencies
        run: |
          cd app
          yarn install --frozen-lockfile

      - name: Set up environment variables
        run: |
          cd app
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/capitalflow_test" > .env
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env
          echo "NEXTAUTH_SECRET=test-secret-key" >> .env

      - name: Generate Prisma client
        run: |
          cd app
          npx prisma generate

      - name: Run database migrations
        run: |
          cd app
          npx prisma db push

      - name: Type checking
        run: |
          cd app
          yarn type-check

      - name: Linting
        run: |
          cd app
          yarn lint

      - name: Build application
        run: |
          cd app
          yarn build

      - name: Run tests
        run: |
          cd app
          yarn test

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: app/yarn.lock

      - name: Install dependencies
        run: |
          cd app
          yarn install --frozen-lockfile

      - name: Run security audit
        run: |
          cd app
          yarn audit

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t capitalflow-portal .

      - name: Test Docker container
        run: |
          docker run -d --name test-container -p 3000:3000 capitalflow-portal
          sleep 10
          docker logs test-container
          docker stop test-container
          docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deployment step - configure with your deployment service"
          # Add your deployment commands here
          # For example, Vercel: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
